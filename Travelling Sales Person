from sys import maxsize
import random
from itertools import permutations
v=4
z=[]
m=[]
def tsp(graph,s):
    vertex=[]
    for i in range(v):
        if i!=s:
            vertex.append(i)
    min_path =maxsize
    next_permutation=permutations(vertex)
    for i in next_permutation:
        current_pathweight=0
        k=s
        for j in i:
            current_pathweight+=graph[k][j]
            k=j
        current_pathweight+=graph[k][s]
        min_path=min(min_path,current_pathweight)
        y=list(i)
        y.insert(0,s)
        y.append(s)
        z.append(y)
        print("pathcost of ",y,'->',current_pathweight)
        m.append(current_pathweight)
    a=0
    for i in range(len(m)):
        if(m[i]>min_path):
            del(z[a])
            a=a-1
        a=a+1
    return random.choice(z),min_path
if __name__=="__main__":
    graph=[[0,10,15,20],[10,0,35,25],[15,35,0,30],[20,25,30,0]]
    s=0
    q=tsp(graph,s)
    print("the path is",q[0],"and path cost is",q[1])
